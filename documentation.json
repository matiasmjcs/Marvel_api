{
    "pipes": [],
    "interfaces": [
        {
            "name": "ICoin",
            "id": "interface-ICoin-f05433abe7faac05087a7ab9d8eec5a575657d1ee34da7a0e92c08f4c578716cb03f689a8f3af568a0597eaf07a421ed2bb3f3b6f184f5b796e41b645cef6811",
            "file": "src/app/models/Icoins.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ICoin {\r\n  id: string;\r\n  symbol: string;\r\n  name: string;\r\n  image: string;\r\n  current_price: number;\r\n  market_cap: number;\r\n  market_cap_rank: number;\r\n  fully_diluted_valuation: number;\r\n  total_volume: number;\r\n  high_24h: number;\r\n  low_24h: number;\r\n  price_change_24h: number;\r\n  price_change_percentage_24h: number;\r\n  market_cap_change_24h: number;\r\n  market_cap_change_percentage_24h: number;\r\n  circulating_supply: number;\r\n  total_supply: number;\r\n  max_supply: number;\r\n  ath: number;\r\n  ath_change_percentage: number;\r\n  ath_date: string;\r\n  atl: number;\r\n  atl_change_percentage: number;\r\n  atl_date: string;\r\n  roi: null;\r\n  last_updated: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "ath",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "ath_change_percentage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "ath_date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "atl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "atl_change_percentage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "atl_date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "circulating_supply",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "current_price",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "fully_diluted_valuation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "high_24h",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "image",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "last_updated",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "low_24h",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "market_cap",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "market_cap_change_24h",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "market_cap_change_percentage_24h",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "market_cap_rank",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "max_supply",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "price_change_24h",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "price_change_percentage_24h",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "roi",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "symbol",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "total_supply",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "total_volume",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "CoingeckoService",
            "id": "injectable-CoingeckoService-0523f55d78221254c25e5b0d78cfffde602f94f9647af6fa15d95d704dbc6ceba733bac6c63d6d761091605d0f111cbd5dbe3b66d38f10b20ad20a53cfc02797",
            "file": "src/app/services/coingecko.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getCoins",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<Observable<ICoin[]>>",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        132
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { ICoin } from '../models/Icoins';\r\nimport {HttpClient} from '@angular/common/http'\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CoingeckoService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  async getCoins(): Promise<Observable<ICoin[]>> {\r\n    return this.http.get<ICoin[]>(\r\n      'https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false'\r\n    );\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "FavoritesService",
            "id": "injectable-FavoritesService-b94f0053f8b7c872211e3ed130525e8154da0237e75230c38a7b8ab01cc0917aa0a346f45373b05cd35adcadb7083d5037856d32b2d9b0e0f4d2805774c3ce62",
            "file": "src/app/services/favorites.service.ts",
            "properties": [
                {
                    "name": "_favoritesCoins",
                    "defaultValue": "new BehaviorSubject<\r\n    Array<ICoin>\r\n  >([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<Array<ICoin>>",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "favoritesCoins",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<ICoin>",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "addFavorite",
                    "args": [
                        {
                            "name": "favorite",
                            "type": "ICoin",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "favorite",
                            "type": "ICoin",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isFavoriteCharacter",
                    "args": [
                        {
                            "name": "favorite",
                            "type": "ICoin",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "favorite",
                            "type": "ICoin",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "removeFavorite",
                    "args": [
                        {
                            "name": "favorite",
                            "type": "ICoin",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "favorite",
                            "type": "ICoin",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { ICoin } from '../models/Icoins';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class FavoritesService {\r\n  private favoritesCoins: Array<ICoin> = [];\r\n  private _favoritesCoins: BehaviorSubject<Array<ICoin>> = new BehaviorSubject<\r\n    Array<ICoin>\r\n  >([]);\r\n  constructor() {}\r\n  addFavorite(favorite: ICoin) {\r\n    if (!this.favoritesCoins.find((f) => f.id === favorite.id)) {\r\n      this.favoritesCoins.push(favorite);\r\n      this._favoritesCoins.next(this.favoritesCoins);\r\n    }\r\n  }\r\n\r\n  get getFavorite() {\r\n    return this._favoritesCoins.asObservable();\r\n  }\r\n\r\n  removeFavorite(favorite: ICoin) {\r\n    this.favoritesCoins = this.favoritesCoins.filter(\r\n      (f) => f.id !== favorite.id\r\n    );\r\n    this._favoritesCoins.next(this.favoritesCoins);\r\n  }\r\n\r\n  isFavoriteCharacter(favorite: ICoin) {\r\n    return this.favoritesCoins.find((f) => f.id === favorite.id)\r\n      ? true\r\n      : false;\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 12
            },
            "accessors": {
                "getFavorite": {
                    "name": "getFavorite",
                    "getSignature": {
                        "name": "getFavorite",
                        "type": "",
                        "returnType": "",
                        "line": 21
                    }
                }
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-4238ac2f530a7b33ec44e1d15d6a93d98e1347db04276a0706a2f0b5511b6e801a5e8f24b2fcedac8718fd1261d86e6fcecd6e403de16f41160e4967682ddc36",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() { }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".container-app {\r\n    padding: 16px;\r\n}",
                    "styleUrl": "./app.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<app-nav></app-nav>\r\n<main class=\"container-app\">\r\n    <router-outlet></router-outlet>\r\n</main>\r\n"
        },
        {
            "name": "CoinsComponent",
            "id": "component-CoinsComponent-67cecf5282b13adab254109c065d106346feeaa68cf46976b9a5d5f4ccf59d9455c33374bcf81a506f3d3d783a144e45c127fdd0253ba53b6bd29c5ededc72c2",
            "file": "src/app/modules/coins/coins.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-coins",
            "styleUrls": [
                "./coins.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./coins.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-coins',\r\n  templateUrl: './coins.component.html',\r\n  styleUrls: ['./coins.component.css']\r\n})\r\nexport class CoinsComponent implements OnInit {\r\n  ngOnInit(): void {\r\n    //Called after the constructor, initializing input properties, and the first call to ngOnChanges.\r\n    //Add 'implements OnInit' to the class.\r\n    \r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./coins.component.css"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<app-coins-table></app-coins-table>\r\n"
        },
        {
            "name": "CoinsTableComponent",
            "id": "component-CoinsTableComponent-4a937f5b25d3dec830122c11026984850e206051f844ecceb35893c3a01fd2843b1946c266b96413db1860e68f957f793a429cdfd47c5263333311be86d6cb57",
            "file": "src/app/modules/coins/components/coins-table/coins-table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-coins-table",
            "styleUrls": [
                "./coins-table.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./coins-table.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "coins",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ICoin[]",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "dataSource",
                    "defaultValue": "new MatTableDataSource()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatTableDataSource<ICoin>",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "[\r\n    'symbol',\r\n    'name',\r\n    'high',\r\n    'low',\r\n    'price',\r\n    'favorites',\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "paginator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatPaginator",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatPaginator"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSort",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatSort"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "applyFilter",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "favorite",
                    "args": [
                        {
                            "name": "coin",
                            "type": "ICoin",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "coin",
                            "type": "ICoin",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isFavorite",
                    "args": [
                        {
                            "name": "coin",
                            "type": "ICoin",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "coin",
                            "type": "ICoin",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        132
                    ]
                },
                {
                    "name": "removed",
                    "args": [
                        {
                            "name": "coin",
                            "type": "ICoin",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "coin",
                            "type": "ICoin",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MatFormFieldModule",
                    "type": "module"
                },
                {
                    "name": "MatInputModule",
                    "type": "module"
                },
                {
                    "name": "MatTableModule",
                    "type": "module"
                },
                {
                    "name": "MatSortModule",
                    "type": "module"
                },
                {
                    "name": "MatPaginatorModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ViewChild, OnInit } from '@angular/core';\r\nimport { MatPaginator, MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSort, MatSortModule } from '@angular/material/sort';\r\nimport { MatTableDataSource, MatTableModule } from '@angular/material/table';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ICoin } from 'src/app/models/Icoins';\r\nimport { CoingeckoService } from 'src/app/services/coingecko.service';\r\nimport { FavoritesService } from 'src/app/services/favorites.service';\r\n\r\n@Component({\r\n  selector: 'app-coins-table',\r\n  templateUrl: './coins-table.component.html',\r\n  styleUrls: ['./coins-table.component.css'],\r\n  standalone: true,\r\n  imports: [\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatTableModule,\r\n    MatSortModule,\r\n    MatPaginatorModule,\r\n    MatIconModule,\r\n    CommonModule,\r\n  ],\r\n})\r\nexport class CoinsTableComponent implements OnInit {\r\n  displayedColumns: string[] = [\r\n    'symbol',\r\n    'name',\r\n    'high',\r\n    'low',\r\n    'price',\r\n    'favorites',\r\n  ];\r\n  dataSource: MatTableDataSource<ICoin> = new MatTableDataSource();\r\n  coins: ICoin[] = [];\r\n\r\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\r\n  @ViewChild(MatSort) sort!: MatSort;\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    (await this.coingeckoService.getCoins()).subscribe((coins) => {\r\n      this.coins = coins;\r\n      this.dataSource = new MatTableDataSource(this.coins);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n  }\r\n  constructor(\r\n    private coingeckoService: CoingeckoService,\r\n    private favoritesService: FavoritesService\r\n  ) {}\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  favorite(coin: ICoin) {\r\n    this.favoritesService.addFavorite(coin);\r\n  }\r\n\r\n  isFavorite(coin: ICoin) {\r\n    return this.favoritesService.isFavoriteCharacter(coin);\r\n  }\r\n  removed(coin: ICoin) {\r\n    this.favoritesService.removeFavorite(coin);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "th {\r\n    color: darkgrey;\r\n}\r\n\r\n.green {\r\n    color: rgb(34, 163, 34);\r\n    font-weight: bold;\r\n}\r\n\r\n.red {\r\n    color: rgb(238, 55, 55);\r\n    font-weight: bold;  \r\n}\r\n\r\n.white {\r\n    color: rgb(190, 182, 182);\r\n}\r\n\r\n.mat-elevation-z8 {\r\n    overflow-x: auto;\r\n}\r\n\r\n.imgCoins {\r\n    width: 20px;\r\n    height: 20px;\r\n    margin-left: 2px;\r\n    margin-right: 2px;\r\n}\r\n",
                    "styleUrl": "./coins-table.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "coingeckoService",
                        "type": "CoingeckoService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "favoritesService",
                        "type": "FavoritesService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 50,
                "jsdoctags": [
                    {
                        "name": "coingeckoService",
                        "type": "CoingeckoService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "favoritesService",
                        "type": "FavoritesService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-form-field ngClass=\"mat-accent\">\r\n  <mat-label>Filter</mat-label>\r\n  <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"...\" #input />\r\n</mat-form-field>\r\n\r\n<div ngClass=\"mat-elevation-z8 mat-accent\">\r\n  <table\r\n    mat-table\r\n    class=\"mat-background-accent\"\r\n    [dataSource]=\"dataSource\"\r\n    matSort\r\n  >\r\n    <ng-container matColumnDef=\"symbol\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\r\n      <td mat-cell *matCellDef=\"let row\">\r\n        <img class=\"imgCoins\" src={{row.image}}/> \r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"name\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>name</th>\r\n      <td mat-cell ngClass=\"name\" *matCellDef=\"let row\">{{ row.name }}</td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"high\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>high</th>\r\n      <td mat-cell ngClass=\"green\" *matCellDef=\"let row\">{{ row.high_24h }}</td>\r\n    </ng-container>\r\n\r\n     <ng-container matColumnDef=\"low\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>low</th>\r\n      <td mat-cell ngClass=\"red\" *matCellDef=\"let row\">{{ row.low_24h }}</td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"price\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>price</th>\r\n      <td\r\n        mat-cell\r\n        [ngClass]=\"{\r\n          green: row.price_change_percentage_24h > 0,\r\n          red: row.price_change_percentage_24h < 0\r\n        }\"\r\n        *matCellDef=\"let row\"\r\n      >\r\n        {{ row.current_price }}\r\n      </td>\r\n    </ng-container>\r\n\r\n     <ng-container matColumnDef=\"favorites\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\r\n      <td *matCellDef=\"let row\" class=\"td_add\" mat-cell >\r\n          <mat-icon *ngIf=\"isFavorite(row)\" ngClass=\"red\" (click)=\"removed(row)\">favorite</mat-icon>\r\n          <mat-icon *ngIf=\"!isFavorite(row)\" ngClass=\"white\" (click)=\"favorite(row)\">favorite</mat-icon>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n    <tr class=\"mat-row\" *matNoDataRow>\r\n      <td class=\"mat-cell\" colspan=\"4\">\r\n        No data matching the filter \"{{ input.value }}\"\r\n      </td>\r\n    </tr>\r\n  </table>\r\n</div>\r\n"
        },
        {
            "name": "FavoritesComponent",
            "id": "component-FavoritesComponent-825f30e0411e7859e725dd7878ebc42d09fc0a7bab72da87358817674916cf226dd44abf2568fa644ba4ba6bf9801cbf13c5a2542653bee4fd7ec5499f8293ac",
            "file": "src/app/components/favorites/favorites.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-favorites",
            "styleUrls": [
                "./favorites.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./favorites.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "coins",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ICoin[]",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "dataSource",
                    "defaultValue": "new MatTableDataSource()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatTableDataSource<ICoin>",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "[\r\n    'symbol',\r\n    'name',\r\n    'high',\r\n    'low',\r\n    'price',\r\n    'favorites',\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "paginator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatPaginator",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatPaginator"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSort",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatSort"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "applyFilter",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "favorite",
                    "args": [
                        {
                            "name": "coin",
                            "type": "ICoin",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "coin",
                            "type": "ICoin",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isFavorite",
                    "args": [
                        {
                            "name": "coin",
                            "type": "ICoin",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "coin",
                            "type": "ICoin",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        132
                    ]
                },
                {
                    "name": "removed",
                    "args": [
                        {
                            "name": "coin",
                            "type": "ICoin",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "coin",
                            "type": "ICoin",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MatFormFieldModule",
                    "type": "module"
                },
                {
                    "name": "MatInputModule",
                    "type": "module"
                },
                {
                    "name": "MatTableModule",
                    "type": "module"
                },
                {
                    "name": "MatSortModule",
                    "type": "module"
                },
                {
                    "name": "MatPaginatorModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatDialogModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ViewChild, OnInit } from '@angular/core';\r\nimport { MatPaginator, MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSort, MatSortModule } from '@angular/material/sort';\r\nimport { MatTableDataSource, MatTableModule } from '@angular/material/table';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule, MatLabel } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ICoin } from 'src/app/models/Icoins';\r\nimport { FavoritesService } from 'src/app/services/favorites.service';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-favorites',\r\n  templateUrl: './favorites.component.html',\r\n  styleUrls: ['./favorites.component.css'],\r\n  standalone: true,\r\n  imports: [\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatTableModule,\r\n    MatSortModule,\r\n    MatPaginatorModule,\r\n    MatIconModule,\r\n    CommonModule,\r\n    MatDialogModule,\r\n  ],\r\n})\r\nexport class FavoritesComponent implements OnInit {\r\n  displayedColumns: string[] = [\r\n    'symbol',\r\n    'name',\r\n    'high',\r\n    'low',\r\n    'price',\r\n    'favorites',\r\n  ];\r\n  dataSource: MatTableDataSource<ICoin> = new MatTableDataSource();\r\n  coins: ICoin[] = [];\r\n\r\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\r\n  @ViewChild(MatSort) sort!: MatSort;\r\n\r\n  constructor(private favoritesService: FavoritesService) {}\r\n  async ngOnInit(): Promise<void> {\r\n    this.favoritesService.getFavorite.subscribe((coins) => {\r\n      this.coins = coins;\r\n      this.dataSource = new MatTableDataSource(this.coins);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  favorite(coin: ICoin) {\r\n    this.favoritesService.addFavorite(coin);\r\n  }\r\n\r\n  isFavorite(coin: ICoin) {\r\n    return this.favoritesService.isFavoriteCharacter(coin);\r\n  }\r\n  removed(coin: ICoin) {\r\n    this.favoritesService.removeFavorite(coin);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "th {\r\n    color: darkgrey;\r\n}\r\n\r\n.green {\r\n    color: rgb(34, 163, 34);\r\n    font-weight: bold;\r\n}\r\n\r\n.red {\r\n    color: rgb(238, 55, 55);\r\n    font-weight: bold;  \r\n}\r\n\r\n.white {\r\n    color: rgb(190, 182, 182);\r\n}\r\n\r\n.mat-elevation-z8 {\r\n    overflow-x: auto;\r\n}\r\n\r\n.imgCoins {\r\n    width: 20px;\r\n    height: 20px;\r\n    margin-left: 2px;\r\n    margin-right: 2px;\r\n}\r\n",
                    "styleUrl": "./favorites.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "favoritesService",
                        "type": "FavoritesService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 42,
                "jsdoctags": [
                    {
                        "name": "favoritesService",
                        "type": "FavoritesService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-form-field ngClass=\"mat-accent\">\r\n  <mat-label>Filter</mat-label>\r\n  <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"...\" #input />\r\n</mat-form-field>\r\n\r\n<div ngClass=\"mat-elevation-z8 mat-accent\">\r\n  <table\r\n    mat-table\r\n    class=\"mat-background-accent\"\r\n    [dataSource]=\"dataSource\"\r\n    matSort\r\n  >\r\n    <ng-container matColumnDef=\"symbol\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\r\n      <td mat-cell *matCellDef=\"let row\">\r\n        <img class=\"imgCoins\" src={{row.image}}/> \r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"name\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>name</th>\r\n      <td mat-cell ngClass=\"name\" *matCellDef=\"let row\">{{ row.name }}</td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"high\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>high</th>\r\n      <td mat-cell ngClass=\"green\" *matCellDef=\"let row\">{{ row.high_24h }}</td>\r\n    </ng-container>\r\n\r\n     <ng-container matColumnDef=\"low\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>low</th>\r\n      <td mat-cell ngClass=\"red\" *matCellDef=\"let row\">{{ row.low_24h }}</td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"price\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>price</th>\r\n      <td\r\n        mat-cell\r\n        [ngClass]=\"{\r\n          green: row.price_change_percentage_24h > 0,\r\n          red: row.price_change_percentage_24h < 0\r\n        }\"\r\n        *matCellDef=\"let row\"\r\n      >\r\n        {{ row.current_price }}\r\n      </td>\r\n    </ng-container>\r\n\r\n     <ng-container matColumnDef=\"favorites\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\r\n      <td *matCellDef=\"let row\" class=\"td_add\" mat-cell >\r\n          <mat-icon ngClass=\"red\" (click)=\"removed(row)\">favorite</mat-icon>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n\r\n    <tr class=\"mat-row\" *matNoDataRow>\r\n      <td class=\"mat-cell\" colspan=\"4\">\r\n        No data matching the filter \"{{ input.value }}\"\r\n      </td>\r\n    </tr>\r\n  </table>\r\n\r\n   <mat-paginator\r\n    [pageSizeOptions]=\"[5, 10, 25, 100]\"\r\n    aria-label=\"Select page of users\"\r\n    ngClass=\"paginator mat-primary\"\r\n  ></mat-paginator>\r\n</div>\r\n"
        },
        {
            "name": "FooterComponent",
            "id": "component-FooterComponent-88694bcbfb27fde93437caa70e2ac8939521b54f0f1df5068b4f3c41c51366060d67619050093d36b5a0d17f605f2f6270d9aa9a181fd7572414d43647d86588",
            "file": "src/app/components/footer/footer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-footer",
            "styleUrls": [
                "./footer.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./footer.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent {\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./footer.component.css"
                }
            ],
            "stylesData": "",
            "templateData": "<footer>footer</footer>\r\n"
        },
        {
            "name": "HomeComponent",
            "id": "component-HomeComponent-8845e32500b5b43b2ff44d2db4328c8e79f3eee67ad42e3786b0e4eb6a3d5e292426adc3a0a5e9c13bb8e8fe755657bcbcc3fc89fb8347c356fef24ef903a3c5",
            "file": "src/app/modules/home/home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-home",
            "styleUrls": [
                "./home.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./home.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent {\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./home.component.css"
                }
            ],
            "stylesData": "",
            "templateData": "<p>home works!</p>\r\n"
        },
        {
            "name": "NavComponent",
            "id": "component-NavComponent-864dc663e1480db83ef28644ca88a50c0c3a3afe3b2c891f28a027d359d603e52ebdcf76315d5c6dc42179f10625c597f89f59832910a39d1a9d163eb3e047a3",
            "file": "src/app/components/nav/nav.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-nav",
            "styleUrls": [
                "./nav.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./nav.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dialog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialog",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openDialog",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { FavoritesComponent } from '../favorites/favorites.component';\r\n@Component({\r\n  selector: 'app-nav',\r\n  templateUrl: './nav.component.html',\r\n  styleUrls: ['./nav.component.css'],\r\n})\r\nexport class NavComponent implements OnInit {\r\n  constructor(public dialog: MatDialog) {}\r\n  ngOnInit(): void {}\r\n  openDialog(): void {\r\n    this.dialog.open(FavoritesComponent, {\r\n      enterAnimationDuration: 1,\r\n    });\r\n  }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".example-spacer {\r\n  flex: 1 1 auto;\r\n}\r\n\r\n.mat-toolbar__a {\r\n  cursor: pointer;\r\n  margin-left: 5px;\r\n  margin-right: 5px;\r\n  margin-top: 5px;\r\n  text-decoration: none;\r\n  color: wheat\r\n}",
                    "styleUrl": "./nav.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-toolbar ngClass=\"mat-card mat-primary\">\r\n  <a class=\"mat-toolbar__a\" routerLink=\"/home\">\r\n    Home\r\n  </a>\r\n  <a class=\"mat-toolbar__a\" routerLink=\"/coins\">Coins</a>\r\n  <span class=\"example-spacer\"></span>\r\n  <button (click)=\"openDialog()\" mat-icon-button class=\"example-icon favorite-icon\" aria-label=\"Example icon-button with heart icon\">\r\n    <mat-icon>favorite</mat-icon>\r\n  </button>\r\n</mat-toolbar>"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-0ac74b82f3e25655ce77cbe101defb6fe2700dcc82f67f4e16ab2fc6ffaa6d5b93e7a28ef1aef6c4bcb1f34ae7b9de05bcab1bee21e18360462a237fae0c9452",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { NavComponent } from './components/nav/nav.component';\r\n@NgModule({\r\n  declarations: [AppComponent, NavComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatDialogModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "NavComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-fdfb0aae0b998770998a2bb2b5662699d73d78d333fafa26ae9fefa7e532953669ef6ae5cae5a5b05c0c2fe929928a3ced9156ecd8cc8d0184d6a2657662e134",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: 'home',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'home',\r\n    loadChildren: () => \"import('./modules').then((m) => m.HomeModule)\",\r\n  },\r\n  {\r\n    path: 'coins',\r\n    loadChildren: () => \"import('./modules').then((m) => m.CoinsModule)\",\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CoinsModule",
            "id": "module-CoinsModule-786b0f74ff4b4c323902388ec824a787e66ab7c35f332f557eed573dab557157b337073a4985b966716e3b4c5aa1784be9cd5935d19b79a412dd54a863232ce5",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/modules/coins/coins.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CoinsComponent } from './coins.component';\r\nimport { CoinsTableComponent } from './components/coins-table/coins-table.component';\r\nimport { CoinsRoutingModule } from './coins-routing.module';\r\n\r\n@NgModule({\r\n  declarations: [CoinsComponent],\r\n  imports: [CommonModule, CoinsTableComponent, CoinsRoutingModule],\r\n})\r\nexport class CoinsModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CoinsComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CoinsRoutingModule"
                        },
                        {
                            "name": "CoinsTableComponent"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CoinsRoutingModule",
            "id": "module-CoinsRoutingModule-a18cc08a72cdfcd6d39206087fe98874d80cf6a0d7dc45062651cd2a9c3f84695c3d01d7ef665735503c647df563337cca1bed9da178afe0a2ccd4e4a1156b8d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/modules/coins/coins-routing.module.ts",
            "methods": [],
            "sourceCode": "import { Component, NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CoinsComponent } from './coins.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CoinsComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CoinsRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "HomeModule",
            "id": "module-HomeModule-74ed5fcf164aac2ad447c3fcf81dd0e085fc590c4082e5c90e581fd5287cd25c8dd0803c716ee4f10565306060ad14180f58ecd9d9e50af8c9605b4f835a16c1",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/modules/home/home.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HomeComponent } from './home.component';\r\nimport { HomeRoutingModule } from './home-routing.module';\r\n\r\n@NgModule({\r\n  declarations: [HomeComponent],\r\n  imports: [CommonModule, HomeRoutingModule],\r\n})\r\nexport class HomeModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "HomeComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "HomeRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "HomeRoutingModule",
            "id": "module-HomeRoutingModule-dd60dced6e3cc5bf6fec9006e3e0fbb1d69259a2bd8b863c1a8ee32fa8030aeb4c641960bc546e1b2c54d3c8dabea88363355762ea680106d77da033dc954a0d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/modules/home/home-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { HomeComponent } from './home.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: HomeComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class HomeRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "actionsData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/nav/nav.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  openDialog: action('openDialog'),\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/nav/nav.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.development.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": ".storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/,\n      },\n    },\n  },\n}"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/nav/nav.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<NavComponent>",
                "defaultValue": "(args) => ({\r\n  component: NavComponent,\r\n  props: {\r\n    ...args,\r\n    openDialog: actionsData.openDialog,\r\n  },\r\n})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/components/nav/nav.component.stories.ts": [
                {
                    "name": "actionsData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/nav/nav.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  openDialog: action('openDialog'),\r\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/nav/nav.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/nav/nav.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<NavComponent>",
                    "defaultValue": "(args) => ({\r\n  component: NavComponent,\r\n  props: {\r\n    ...args,\r\n    openDialog: actionsData.openDialog,\r\n  },\r\n})"
                }
            ],
            "src/environments/environment.development.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.development.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{}"
                }
            ],
            ".storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": ".storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/,\n      },\n    },\n  },\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "",
                        "redirectTo": "home",
                        "pathMatch": "full"
                    },
                    {
                        "path": "home",
                        "loadChildren": "./modules#HomeModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/modules/home/home-routing.module.ts",
                                        "module": "HomeRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "HomeComponent"
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "HomeModule"
                            }
                        ]
                    },
                    {
                        "path": "coins",
                        "loadChildren": "./modules#CoinsModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/modules/coins/coins-routing.module.ts",
                                        "module": "CoinsRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "CoinsComponent"
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "CoinsModule"
                            }
                        ]
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": ".storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/favorites/favorites.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FavoritesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/components/footer/footer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FooterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/nav/nav.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actionsData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/nav/nav.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/nav/nav.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/nav/nav.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/models/Icoins.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ICoin",
                "coveragePercent": 0,
                "coverageCount": "0/27",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/coins/coins.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CoinsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/coins/components/coins-table/coins-table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CoinsTableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/home/home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/services/coingecko.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CoingeckoService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/services/favorites.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "FavoritesService",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.development.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}